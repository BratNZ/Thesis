%Matlab Commands - Stationary only data (Remember to save workspace when complete)

clear all;
%*********************************************************************************
% Edit lines below
movement_type='Pitch'
filename_data=readtable('D:\Study\2023-08-27_2125.csv');
%*********************************************************************************

filedata = readtable(filename_data);

filetable(:,1:2)=filedata(:,1:2);
filetable(:,3:8)=filedata(:,4:9);
timetable(:,1)=filedata(:,3);
cm_data_array=zeros(1,7);
fl_data_array=zeros(1,7);
fr_data_array=zeros(1,7);
rl_data_array=zeros(1,7);
rr_data_array=zeros(1,7);
cm_time_array=NaT(1,1);
fl_time_array=NaT(1,1);
fr_time_array=NaT(1,1);
rl_time_array=NaT(1,1);
rr_time_array=NaT(1,1);
clear loop;
for loop=1:size(filetable)
  imuname=filetable(loop,1);
  if strcmp(imuname.Var1,'CM')==1
    cm_data_array(end+1,:)=table2array(filetable(loop,2:end));
	cm_time_array(end+1,:)=table2array(timetable(loop,1));
  elseif strcmp(imuname.Var1,'FL')==1
    fl_data_array(end+1,:)=table2array(filetable(loop,2:end));
	fl_time_array(end+1,:)=table2array(timetable(loop,1));
  elseif strcmp(imuname.Var1,'FR')==1
    fr_data_array(end+1,:)=table2array(filetable(loop,2:end));
	fr_time_array(end+1,:)=table2array(timetable(loop,1));
  elseif strcmp(imuname.Var1,'RL')==1
    rl_data_array(end+1,:)=table2array(filetable(loop,2:end));
	rl_time_array(end+1,:)=table2array(timetable(loop,1));
  elseif strcmp(imuname.Var1,'RR')==1
    rr_data_array(end+1,:)=table2array(filetable(loop,2:end));
	rr_time_array(end+1,:)=table2array(timetable(loop,1));
  end		
end
% Trim arrays to get rid of initial initialising row.
cm_data_array(1,:)=[];
cm_time_array(1,:)=[];
cm_imudatasize=length(cm_data_array);
fl_data_array(1,:)=[];
fl_time_array(1,:)=[];
fl_imudatasize=length(fl_data_array);
fr_data_array(1,:)=[];
fr_time_array(1,:)=[];
fr_imudatasize=length(fr_data_array);
rl_data_array(1,:)=[];
rl_time_array(1,:)=[];
rl_imudatasize=length(rl_data_array);
fr_data_array(1,:)=[];
fr_time_array(1,:)=[];
fr_imudatasize=length(fr_data_array);
rr_data_array(1,:)=[];
rr_time_array(1,:)=[];
rr_imudatasize=length(rr_data_array);

imuarray=[];
for imu = [ "cm" "fl" "fr" "rl" "rr" ]
	clear imuarray;
	if imu == 'cm'
		imuarray=cm_data_array;
	elseif imu == 'fl'
		imuarray=fl_data_array;
	elseif imu == 'fr'
		imuarray=fr_data_array;
	elseif imu == 'rl'
		imuarray=rl_data_array;
	elseif imu == 'rr'
		imuarray=rr_data_array;
	end
	gyro_x=imuarray(:,5);
	gyro_y=imuarray(:,6);
	gyro_z=imuarray(:,7);
	accel_x=imuarray(:,2);
	accel_y=imuarray(:,3);	
	accel_z=imuarray(:,4);
	if imu == 'cm'
		[ cm_Mpitch, cm_Mroll, cm_Melapsed_time ] = madgwickfilter(cm_imudatasize,accel_x,accel_y,accel_z,gyro_z,gyro_y,gyro_z,cm_time_array);
		[ cm_Kpitch, cm_Kroll, cm_Kelapsed_time ] = kalmanfilter(accel_x,accel_y,accel_z,gyro_z,gyro_y,gyro_z);
		cm_Mangles= [ cm_Mroll cm_Mpitch ];
		cm_Kangles= [ cm_Kroll cm_Kpitch ];
	elseif imu == 'fl'
		[ fl_Mpitch, fl_Mroll, fl_Melapsed_time ] = madgwickfilter(fl_imudatasize,accel_x,accel_y,accel_z,gyro_z,gyro_y,gyro_z,fl_time_array);
		[ fl_Kpitch, fl_Kroll, fl_Kelapsed_time ] = kalmanfilter(accel_x,accel_y,accel_z,gyro_z,gyro_y,gyro_z);
		fl_Mangles= [ fl_Mroll fl_Mpitch ];
		fl_Kangles= [ fl_Kroll fl_Kpitch ];
	elseif imu == 'fr'
		[ fr_Mpitch, fr_Mroll, fr_Melapsed_time ] = madgwickfilter(fr_imudatasize,accel_x,accel_y,accel_z,gyro_z,gyro_y,gyro_z,fr_time_array);
		[ fr_Kpitch, fr_Kroll, fr_Kelapsed_time ] = kalmanfilter(accel_x,accel_y,accel_z,gyro_z,gyro_y,gyro_z);
		fr_Mangles= [ fr_Mroll fr_Mpitch ];
		fr_Kangles= [ fr_Kroll fr_Kpitch ];
	elseif imu == 'rl'
		[ rl_Mpitch, rl_Mroll, rl_Melapsed_time ] = madgwickfilter(rl_imudatasize,accel_x,accel_y,accel_z,gyro_z,gyro_y,gyro_z,rl_time_array);
		[ rl_Kpitch, rl_Kroll, rl_Kelapsed_time ] = kalmanfilter(accel_x,accel_y,accel_z,gyro_z,gyro_y,gyro_z);
		rl_Mangles= [ rl_Mroll rl_Mpitch ];
		rl_Kangles= [ rl_Kroll rl_Kpitch ];
	elseif imu == 'rr'
		[ rr_Mpitch, rr_Mroll, rr_Melapsed_time ] = madgwickfilter(rr_imudatasize,accel_x,accel_y,accel_z,gyro_z,gyro_y,gyro_z,rr_time_array);
		[ rr_Kpitch, rr_Kroll, rr_Kelapsed_time ] = kalmanfilter(accel_x,accel_y,accel_z,gyro_z,gyro_y,gyro_z);
		rr_Mangles= [ rr_Mroll rr_Mpitch ];
		rr_Kangles= [ rr_Kroll rr_Kpitch ];
	end
end
for l = 1:cm_imudatasize
	average_Kroll(l) = mean([ fl_Kroll(l) cm_Kroll(l) fr_Kroll(l) rl_Kroll(l) rr_Kroll(l) ]);
	average_Mroll(l) = mean([ fl_Mroll(l) cm_Mroll(l) fr_Mroll(l) rl_Mroll(l) rr_Mroll(l) ]);
	average_Kpitch(l) = mean([ fl_Kpitch(l) cm_Kpitch(l) fr_Kpitch(l) rl_Kpitch(l) rr_Kpitch(l) ]);
	average_Mpitch(l) = mean([ fl_Mpitch(l) cm_Mpitch(l) fr_Mpitch(l) rl_Mpitch(l) rr_Mpitch(l) ]);
end

startpos=1
endpos=600
hold off
plot(cm_Mpitch(startpos:endpos,:));
hold on
% Plot Robot arm data
plot(reducedrobotanglearray(startpos:endpos,:));
title("Madgwick Pitch and Robot Arm movements compared with gain set to 5.0");
xlabel ('Number of Data Samples');
ylabel ('Angle in Radians');
legend ('Madgwick Pitch','Robot Pitch','Robot Roll')
hold off
figure

hold off
plot(cm_Kpitch(startpos:endpos,:));
hold on
plot(cm_Mpitch(startpos:endpos,:));
% Plot Robot arm data
plot(reducedrobotanglearray(startpos:endpos,:));
title("Kalman and Madgwick Pitch and Robot Arm movements compared with gain set to 5.0");
xlabel ('Number of Data Samples');
ylabel ('Angle in Radians');
legend ('Kalman Pitch','Madgwick Pitch','Robot Pitch','Robot Roll')
hold off
figure

hold off
% Plot Robot arm data
plot(reducedrobotanglearray(startpos:endpos,:));
hold on
plot(average_Mpitch(startpos:endpos));
plot(average_Kpitch(startpos:endpos));
title("Average Kalman Pitch, Average Madgwick Pitch and Robot Arm movements compared");
xlabel ('Number of Data Samples');
ylabel ('Angle in Radians');
legend ('Robot Pitch','Robot Roll','Average Madgwick Pitch','Average Kalman Pitch')

for l = 1:cm_imudatasize
	average_3Kroll(l) = mean([ fl_Kroll(l) cm_Kroll(l) fr_Kroll(l) ]);
	average_3Mroll(l) = mean([ fl_Mroll(l) cm_Mroll(l) fr_Mroll(l) ]);
	average_3Kpitch(l) = mean([ fl_Kpitch(l) cm_Kpitch(l) fr_Kpitch(l) ]);
	average_3Mpitch(l) = mean([ fl_Mpitch(l) cm_Mpitch(l) fr_Mpitch(l) ]);
end
hold off
% Plot Robot arm data
plot(reducedrobotanglearray(startpos:endpos,:));
hold on
plot(average_3Mpitch(startpos:endpos));
plot(average_3Kpitch(startpos:endpos));
title("Average of Front 3 IMUs - Kalman & Madgwick Pitch and Robot Arm movements compared");
xlabel ('Number of Data Samples');
ylabel ('Angle in Radians');
legend ('Robot Pitch','Robot Roll','Average Madgwick Pitch','Average Kalman Pitch')
